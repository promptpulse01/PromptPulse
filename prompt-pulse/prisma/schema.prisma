generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Shops {
   id               String      @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  description      String
  shopProductsType String
  avatar           String
  ratings          Float       @default(0)
  totalSales       Int         @default(0)
  allProducts      Int         @default(0)
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  userId           String      @unique
    bank             Banks?
  withdraws        withdraws[]
}

model Images {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  public_id String
  url       String
  Prompts   Prompts? @relation(fields: [promptId], references: [id])
  promptId  String?  @db.ObjectId
}

model Reviews {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  promptId  String   @db.ObjectId
  userId    String
  rating    Float
  comment   String
  createdAt DateTime @default(now())
  prompts   Prompts  @relation(fields: [promptId], references: [id])
}

model PromptFiles {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  public_id String
  url       String
  Prompts   Prompts? @relation(fields: [promptsId], references: [id])
  promptsId String?  @db.ObjectId
}

enum promptStatus {
  Pending
  Live
  Declined
}

model Orders {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userId         String
  promptId       String   @db.ObjectId
  prompt         Prompts  @relation(fields: [promptId], references: [id])
  payment_method String
  payment_id     String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Prompts {
  id               String        @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  shortDescription String
  description      String
  images           Images[]
  estimatedPrice   Float?
  price            Float
  category         String
  tags             String
  rating           Float         @default(0)
  reviews          Reviews[]
  promptUrl        PromptFiles[]
  sellerId         String
  orders           Orders[]
  cart            CartItem[]
  status           promptStatus  @default(Pending)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}


model Cart {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userId         String
  payment_method String 
  payment_id     String
  items          CartItem[]
  isPaid      Boolean   @default(false)
}

model CartItem {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  cartId         String   @db.ObjectId
  promptId       String   @db.ObjectId
  prompt         Prompts @relation(fields:[promptId], references:[id])
  cart        Cart      @relation(fields: [cartId], references: [id])
}

model Banks {
  id                  String @id @default(auto()) @map("_id") @db.ObjectId
  bank_name           String
  bank_address        String
  sellerId            String @unique @db.ObjectId
  bank                Shops  @relation(fields: [sellerId], references: [id])
  account_holder_name String
  account_number      Float
  routing_number      Float
  swift_code          String
}

model withdraws {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  sellerId  String   @db.ObjectId
  shop      Shops    @relation(fields: [sellerId], references: [id])
  amount    Float
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
